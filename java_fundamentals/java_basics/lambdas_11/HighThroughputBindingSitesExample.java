package java_fundamentals.java_basics.lambdas_11;

import java.util.ArrayList;
import java.util.List;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.Supplier;

// Peptide interface representing a peptide sequence
interface Peptide {
    String getSequence();
}

// Example class implementing the Peptide interface
class PeptideBuilder implements Peptide {
    private String sequence;

    public PeptideBuilder(String sequence) {
        this.sequence = sequence;
    }

    @Override
    public String getSequence() {
        return sequence;
    }
}

public class HighThroughputBindingSitesExample {
    public static void main(String[] args) {
        // Define a supplier to generate random peptide sequences
        Supplier<String> peptideSequenceSupplier = () -> {
            StringBuilder peptideSequenceBuilder = new StringBuilder();
            for (int i = 0; i < 15; i++) {
                int aminoAcidIndex = (int) (Math.random() * 20);
                char aminoAcid = (char) ('A' + aminoAcidIndex);
                peptideSequenceBuilder.append(aminoAcid);
            }
            return peptideSequenceBuilder.toString();
        };

        // Create a list of peptide builders representing peptide sequences generated by the supplier
        List<Peptide> peptideBuilders = new ArrayList<>();
        for (int i = 0; i < 30; i++) {
            peptideBuilders.add(new PeptideBuilder(peptideSequenceSupplier.get()));
        }

        // Define a predicate to filter peptide sequences containing 'ABC' sequence
        Predicate<Peptide> abcSequenceFilter = peptide -> peptide.getSequence().contains("ABC");

        // Define a function to convert peptide sequences to uppercase
        Function<Peptide, String> peptideToUppercaseConverter = peptide -> peptide.getSequence().toUpperCase();

        // Define a consumer to print peptide sequences
        Consumer<Peptide> peptideSequencePrinter = peptide ->
                System.out.println("Peptide Sequence: " + peptide.getSequence());

        // Filter peptide sequences containing 'ABC'
        System.out.println("Peptide Sequences containing 'ABC':");
        peptideBuilders.stream()
                .filter(abcSequenceFilter)
                .forEach(peptideSequencePrinter);

        // Convert peptide sequences to lowercase and print
        System.out.println("\nUppercase Peptide Sequences:");
        peptideBuilders.stream()
                .map(peptideToUppercaseConverter)
                .forEach(System.out::println);
    }
}
